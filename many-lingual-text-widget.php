<?php/* * Plugin Name: Many lingual text widget * Version: 1.0 * Plugin URI: http://2buyweb.com/?p=727 * Description: Many lingual text widget For Wordpress with Qtranslate or Qtranslate-x. You can quickly and easily make multilingual text widgets.    Language switching can be done by clicking on the flag of the language. Download: http://2buyweb.com/wp-content/themes/2buyweb/plugins/many-lingual-text-widget.zip * Author: SuperPuperLesha * Author URI: http://2buyweb.com *	Note:  *	License:     Copyright 2015  superpuperlesha  (email : superpuperlesha@gmail.com)    This program is free software;        The license for this software can likely be found here: http://www.gnu.org/licenses/gpl-2.0.html*/
/*  Copyright 2015  SuperPuperLesha  (email: SuperPuperLesha@gmail.com)    This program is free software; you can redistribute it and/or modify    it under the terms of the GNU General Public License as published by    the Free Software Foundation; either version 2 of the License, or    (at your option) any later version.
    This program is distributed in the hope that it will be useful,    but WITHOUT ANY WARRANTY; without even the implied warranty of    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the    GNU General Public License for more details.
    You should have received a copy of the GNU General Public License    along with this program; if not, write to the Free Software    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA*/

class MLTW_TextWidget extends WP_Widget{	public $MLTW_enabled_langs_num; # enabled languages number	public $MLTW_enabled_langs;     # enabled languages @array	public $MLTW_get_Translate_Plugin_Name;
	function MLTW_get_Translate_Plugin_Name(){		if(function_exists('qtrans_init')) {			return 'qtranslate';		}		if(function_exists('qtranxf_init_language')) {			return 'qtranslate-x';		}	}
	function MLTW_TextWidget(){		$this->MLTW_get_Translate_Plugin_Name = $this->MLTW_get_Translate_Plugin_Name();		$widget_ops  = array('classname' => 'MLTW_TextWidget', 'description' => __( "Text widget content in multiple languages Site.") );		$control_ops = array('width' => 'auto', 'height' => 'auto');		$this->WP_Widget('mltwtext', __('Many lingual text widget'), $widget_ops, $control_ops);
		if( $this->MLTW_get_Translate_Plugin_Name == 'qtranslate' ) {			$this->MLTW_enabled_langs = qtrans_getSortedLanguages(); // get enabled languages		}		if( $this->MLTW_get_Translate_Plugin_Name == 'qtranslate-x' ) {			$this->MLTW_enabled_langs = qtranxf_getSortedLanguages(); // get enabled languages		}
		$this->MLTW_enabled_langs_num = count($this->MLTW_enabled_langs); // get enabled languages number	}
	function MLTW_lang_ini($MLTW_lang, $MLTW_lang_content){		return "<!--:$MLTW_lang-->$MLTW_lang_content<!--:-->";	}
	function widget($args, $instance){		extract($args);		echo $before_widget;		echo $before_title . $instance['lang_title'] . $after_title;			echo '<div class="MLTW_content">'.$instance['lang_text']."</div>";		echo $after_widget;	}
	function update($new_instance, $old_instance){		$instance = $old_instance;		$instance['lang_title'] = ""; # Clear Old Title		$instance['lang_text'] = ""; # Clear Old Text
		foreach($this->MLTW_enabled_langs as $lng) {			$instance['lang_title'] .= self::MLTW_lang_ini($lng,$new_instance[$lng]);		}
		foreach($this->MLTW_enabled_langs as $lng) {			$instance['lang_text'] .= self::MLTW_lang_ini($lng,$new_instance['text_'.$lng]);		}
		return $instance;	}
	function form($instance){		if( (!defined("QT_SUPPORTED_WP_VERSION")) && (!defined("QTX_VERSION")) ) {			echo "You Must Enable/Install Qtranslate or Qtranslate-x To Use This Plugin";		}else{			$instance = wp_parse_args( (array) $instance, array('title'=>'', 'text'=>'') );	
			if( $this->MLTW_get_Translate_Plugin_Name == 'qtranslate' ){				$MLTW_parsed_title = qtrans_split($instance['lang_title']);# parse qTranslate's lang delimiters from title				$MLTW_parsed_text  = qtrans_split($instance['lang_text']); # parse qTranslate's lang delimiters from text			}
			if( $this->MLTW_get_Translate_Plugin_Name == 'qtranslate-x' ){				$MLTW_parsed_title = qtranxf_split($instance['lang_title']); # parse qTranslate's lang delimiters from title				$MLTW_parsed_text  = qtranxf_split($instance['lang_text']); # parse qTranslate's lang delimiters from text			}
			$bodys ='';			$tabs  ='<ul class="MLTW_widget-tabs">';
			$i     =0;
			foreach($this->MLTW_enabled_langs as $MLTW_lang){				$i++;				$bodys.='<div class="MLTW_widget-list" id="tv_bod_'.$i.'">							<p>								<label for="' . $this->get_field_name($MLTW_lang) . '">'.__('Title['.$MLTW_lang .']').'</label>								<input id="' . $this->get_field_id($MLTW_lang) . '" name="' . $this->get_field_name($MLTW_lang) . '" type="text" value="' . $MLTW_parsed_title[$MLTW_lang] . '" />							</p>							<p>								<label for="' . $this->get_field_name("text_".$MLTW_lang) . '">' . __('Content['.$MLTW_lang.']') . '</label>								<textarea id="' . $this->get_field_id("text_".$MLTW_lang) . '" name="' . $this->get_field_name("text_".$MLTW_lang) . '" rows="16">' . $MLTW_parsed_text[$MLTW_lang] . '</textarea>							</p>						</div>';				$tabs.='<li class="MLTW_widget-tab" id="tb_bod_'.$i.'" >							<a href="#tv_bod_'.$i.'" class="MLTW_widget-tab-link" onclick=" myFunction(\''.$i.'\'); "><img src="'.plugins_url().'/many-lingual-text-widget/flags/'.$MLTW_lang.'.png" alt="'.$MLTW_lang.'" />:'.$MLTW_lang.'</a>						</li>';			}			$tabs .='</ul>';			echo'<link rel="stylesheet" href="'.plugins_url().'/many-lingual-text-widget/admin-widget.css" type="text/css" media="all" />				 <div class="MLTW_widget">'.$bodys.$tabs.'</div>';								//wp_register_style( 'MLTW', plugins_url().'/many-lingual-text-widget/admin-widget.css' );				//wp_enqueue_style( 'MLTW' );			?><script>				function myFunction(idd){					var i;					var divs = document.querySelectorAll(".MLTW_widget-list");					for (i = 0; i < divs.length; i++) {						divs[i].style.display = "none";					}
					var divs = document.querySelectorAll(".MLTW_widget-tab");					for (i = 0; i < divs.length; i++) {						divs[i].style.bottom = "0px";					}
					var divs = document.querySelectorAll("#tv_bod_"+idd);					for (i = 0; i < divs.length; i++) {						divs[i].style.display = "block";					}
										var divs = document.querySelectorAll("#tb_bod_"+idd);					for (i = 0; i < divs.length; i++) {						divs[i].style.bottom = "-1px";					}				}			</script><?php		}	}}
function MLTW_Init(){register_widget('MLTW_TextWidget');}add_action('widgets_init', 'MLTW_Init');?>